{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karee\\\\OneDrive\\\\Desktop\\\\advanced-react-router\\\\src\\\\components\\\\comments\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = () => {\n  _s();\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const param = useParams();\n  const {\n    quoteid\n  } = param;\n  const {\n    sendRequest,\n    status,\n    data: loadedComment\n  } = useHttp(getAllComments);\n  useEffect(() => {\n    sendRequest(quoteid);\n  }, [quoteId, sendRequest]);\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const addCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n  let comment;\n  if (status === \"pending\") {\n    comment = /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }, this);\n  }\n  if (status === \"completed\" && loadedComment && loadedComment.length > 0) {\n    comment = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comment: loadedComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }, this);\n  }\n  if (status === \"completed\" && (!loadedComment || loadedComment.length === 0)) {\n    comment = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: \"no comments added yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: param.quoteId,\n      onAddComment: addCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), comment]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"FwocUsEZtrnInIkb49ove1UPn4c=\", false, function () {\n  return [useParams, useHttp];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useState","useEffect","useCallback","useParams","classes","NewCommentForm","useHttp","getAllComments","LoadingSpinner","CommentsList","Comments","isAddingComment","setIsAddingComment","param","quoteid","sendRequest","status","data","loadedComment","quoteId","startAddCommentHandler","addCommentHandler","comment","length","comments"],"sources":["C:/Users/karee/OneDrive/Desktop/advanced-react-router/src/components/comments/Comments.js"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const param = useParams();\n  const { quoteid } = param;\n  const { sendRequest, status, data: loadedComment } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteid);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comment;\n  if (status === \"pending\") {\n    comment = <LoadingSpinner />;\n  }\n  if (status === \"completed\" && loadedComment && loadedComment.length > 0) {\n    comment = <CommentsList comment={loadedComment} />;\n  }\n  if (\n    status === \"completed\" &&\n    (!loadedComment || loadedComment.length === 0)\n  ) {\n    comment = <p className=\"centered\">no comments added yet</p>;\n  }\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={param.quoteId}\n          onAddComment={addCommentHandler}\n        />\n      )}\n      {comment}\n    </section>\n  );\n};\n\nexport default Comments;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,YAAY,MAAM,gBAAgB;AAAC;AAC1C,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMa,KAAK,GAAGV,SAAS,EAAE;EACzB,MAAM;IAAEW;EAAQ,CAAC,GAAGD,KAAK;EACzB,MAAM;IAAEE,WAAW;IAAEC,MAAM;IAAEC,IAAI,EAAEC;EAAc,CAAC,GAAGZ,OAAO,CAACC,cAAc,CAAC;EAE5EN,SAAS,CAAC,MAAM;IACdc,WAAW,CAACD,OAAO,CAAC;EACtB,CAAC,EAAE,CAACK,OAAO,EAAEJ,WAAW,CAAC,CAAC;EAE1B,MAAMK,sBAAsB,GAAG,MAAM;IACnCR,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMS,iBAAiB,GAAGnB,WAAW,CAAC,MAAM;IAC1Ca,WAAW,CAACI,OAAO,CAAC;EACtB,CAAC,EAAE,CAACJ,WAAW,EAAEI,OAAO,CAAC,CAAC;EAE1B,IAAIG,OAAO;EACX,IAAIN,MAAM,KAAK,SAAS,EAAE;IACxBM,OAAO,gBAAG,QAAC,cAAc;MAAA;MAAA;MAAA;IAAA,QAAG;EAC9B;EACA,IAAIN,MAAM,KAAK,WAAW,IAAIE,aAAa,IAAIA,aAAa,CAACK,MAAM,GAAG,CAAC,EAAE;IACvED,OAAO,gBAAG,QAAC,YAAY;MAAC,OAAO,EAAEJ;IAAc;MAAA;MAAA;MAAA;IAAA,QAAG;EACpD;EACA,IACEF,MAAM,KAAK,WAAW,KACrB,CAACE,aAAa,IAAIA,aAAa,CAACK,MAAM,KAAK,CAAC,CAAC,EAC9C;IACAD,OAAO,gBAAG;MAAG,SAAS,EAAC,UAAU;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA0B;EAC7D;EACA,oBACE;IAAS,SAAS,EAAElB,OAAO,CAACoB,QAAS;IAAA,wBACnC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,EACrB,CAACb,eAAe,iBACf;MAAQ,SAAS,EAAC,KAAK;MAAC,OAAO,EAAES,sBAAuB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGzD,EACAT,eAAe,iBACd,QAAC,cAAc;MACb,OAAO,EAAEE,KAAK,CAACM,OAAQ;MACvB,YAAY,EAAEE;IAAkB;MAAA;MAAA;MAAA;IAAA,QAEnC,EACAC,OAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEd,CAAC;AAAC,GAhDIZ,QAAQ;EAAA,QAEEP,SAAS,EAE8BG,OAAO;AAAA;AAAA,KAJxDI,QAAQ;AAkDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}