{"ast":null,"code":"import _regeneratorRuntime from\"E:/projects/advanced-react-router/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _objectSpread from\"E:/projects/advanced-react-router/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"E:/projects/advanced-react-router/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var FIREBASE_DOMAIN=\"https://quotes-216e6-default-rtdb.firebaseio.com\";export function getAllQuotes(){return _getAllQuotes.apply(this,arguments);}function _getAllQuotes(){_getAllQuotes=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,data,transformedQuotes,key,quoteObj;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(FIREBASE_DOMAIN,\"/quotes.json\"));case 2:response=_context.sent;_context.next=5;return response.json();case 5:data=_context.sent;if(response.ok){_context.next=8;break;}throw new Error(data.message||\"Could not fetch quotes.\");case 8:transformedQuotes=[];for(key in data){quoteObj=_objectSpread({id:key},data[key]);transformedQuotes.push(quoteObj);}return _context.abrupt(\"return\",transformedQuotes);case 11:case\"end\":return _context.stop();}}},_callee);}));return _getAllQuotes.apply(this,arguments);}export function getSingleQuote(_x){return _getSingleQuote.apply(this,arguments);}function _getSingleQuote(){_getSingleQuote=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(quoteId){var response,data,loadedQuote;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(FIREBASE_DOMAIN,\"/quotes/\").concat(quoteId,\".json\"));case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:data=_context2.sent;if(response.ok){_context2.next=8;break;}throw new Error(data.message||\"Could not fetch quote.\");case 8:loadedQuote=_objectSpread({id:quoteId},data);return _context2.abrupt(\"return\",loadedQuote);case 10:case\"end\":return _context2.stop();}}},_callee2);}));return _getSingleQuote.apply(this,arguments);}export function addQuote(_x2){return _addQuote.apply(this,arguments);}function _addQuote(){_addQuote=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(quoteData){var response,data;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fetch(\"\".concat(FIREBASE_DOMAIN,\"/quotes.json\"),{method:\"POST\",body:JSON.stringify(quoteData),headers:{\"Content-Type\":\"application/json\"}});case 2:response=_context3.sent;_context3.next=5;return response.json();case 5:data=_context3.sent;if(response.ok){_context3.next=8;break;}throw new Error(data.message||\"Could not create quote.\");case 8:return _context3.abrupt(\"return\",null);case 9:case\"end\":return _context3.stop();}}},_callee3);}));return _addQuote.apply(this,arguments);}export function addComment(_x3){return _addComment.apply(this,arguments);}function _addComment(){_addComment=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(requesetData){var response,data;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return fetch(\"\".concat(FIREBASE_DOMAIN,\"/comments/\").concat(requesetData.quoteId,\".json\"),{method:\"POST\",body:JSON.stringify(requesetData.commentData),headers:{\"Content-Type\":\"application/json\"}});case 2:response=_context4.sent;_context4.next=5;return response.json();case 5:data=_context4.sent;if(response.ok){_context4.next=8;break;}throw new Error(data.message||\"Could not add comment.\");case 8:return _context4.abrupt(\"return\",{commentId:data.name});case 9:case\"end\":return _context4.stop();}}},_callee4);}));return _addComment.apply(this,arguments);}export function getAllComments(_x4){return _getAllComments.apply(this,arguments);}function _getAllComments(){_getAllComments=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(quoteId){var response,data,transformedComments,key,commentObj;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return fetch(\"\".concat(FIREBASE_DOMAIN,\"/comments/\").concat(quoteId,\".json\"));case 2:response=_context5.sent;_context5.next=5;return response.json();case 5:data=_context5.sent;if(response.ok){_context5.next=8;break;}throw new Error(data.message||\"Could not get comments.\");case 8:transformedComments=[];for(key in data){commentObj=_objectSpread({id:key},data[key]);transformedComments.push(commentObj);}return _context5.abrupt(\"return\",transformedComments);case 11:case\"end\":return _context5.stop();}}},_callee5);}));return _getAllComments.apply(this,arguments);}","map":{"version":3,"names":["FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","data","ok","Error","message","transformedQuotes","key","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","requesetData","commentData","commentId","name","getAllComments","transformedComments","commentObj"],"sources":["E:/projects/advanced-react-router/src/lib/api.js"],"sourcesContent":["const FIREBASE_DOMAIN = \"https://quotes-216e6-default-rtdb.firebaseio.com\";\r\n\r\nexport async function getAllQuotes() {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not fetch quotes.\");\r\n  }\r\n\r\n  const transformedQuotes = [];\r\n\r\n  for (const key in data) {\r\n    const quoteObj = {\r\n      id: key,\r\n      ...data[key],\r\n    };\r\n\r\n    transformedQuotes.push(quoteObj);\r\n  }\r\n\r\n  return transformedQuotes;\r\n}\r\n\r\nexport async function getSingleQuote(quoteId) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not fetch quote.\");\r\n  }\r\n\r\n  const loadedQuote = {\r\n    id: quoteId,\r\n    ...data,\r\n  };\r\n\r\n  return loadedQuote;\r\n}\r\n\r\nexport async function addQuote(quoteData) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\r\n    method: \"POST\",\r\n    body: JSON.stringify(quoteData),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not create quote.\");\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport async function addComment(requesetData) {\r\n  const response = await fetch(\r\n    `${FIREBASE_DOMAIN}/comments/${requesetData.quoteId}.json`,\r\n    {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requesetData.commentData),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }\r\n  );\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not add comment.\");\r\n  }\r\n\r\n  return { commentId: data.name };\r\n}\r\n\r\nexport async function getAllComments(quoteId) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\r\n\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not get comments.\");\r\n  }\r\n\r\n  const transformedComments = [];\r\n\r\n  for (const key in data) {\r\n    const commentObj = {\r\n      id: key,\r\n      ...data[key],\r\n    };\r\n\r\n    transformedComments.push(commentObj);\r\n  }\r\n\r\n  return transformedComments;\r\n}\r\n"],"mappings":"oXAAA,GAAMA,gBAAe,CAAG,kDAAkD,CAE1E,eAAsBC,aAAY,+CAoBjC,iGApBM,4MACkBC,MAAK,WAAIF,eAAe,iBAAe,QAAxDG,QAAQ,qCACKA,SAAQ,CAACC,IAAI,EAAE,QAA5BC,IAAI,kBAELF,QAAQ,CAACG,EAAE,8BACR,IAAIC,MAAK,CAACF,IAAI,CAACG,OAAO,EAAI,yBAAyB,CAAC,QAGtDC,iBAAiB,CAAG,EAAE,CAE5B,IAAWC,GAAG,GAAIL,KAAI,CAAE,CAChBM,QAAQ,gBACZC,EAAE,CAAEF,GAAG,EACJL,IAAI,CAACK,GAAG,CAAC,EAGdD,iBAAiB,CAACI,IAAI,CAACF,QAAQ,CAAC,CAClC,CAAC,gCAEMF,iBAAiB,yDACzB,+CAED,eAAsBK,eAAc,mDAcnC,qGAdM,kBAA8BC,OAAO,6KACnBb,MAAK,WAAIF,eAAe,oBAAWe,OAAO,UAAQ,QAAnEZ,QAAQ,uCACKA,SAAQ,CAACC,IAAI,EAAE,QAA5BC,IAAI,mBAELF,QAAQ,CAACG,EAAE,+BACR,IAAIC,MAAK,CAACF,IAAI,CAACG,OAAO,EAAI,wBAAwB,CAAC,QAGrDQ,WAAW,gBACfJ,EAAE,CAAEG,OAAO,EACRV,IAAI,mCAGFW,WAAW,2DACnB,iDAED,eAAsBC,SAAQ,8CAe7B,yFAfM,kBAAwBC,SAAS,iKACfhB,MAAK,WAAIF,eAAe,iBAAgB,CAC7DmB,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACJ,SAAS,CAAC,CAC/BK,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,QANIpB,QAAQ,uCAOKA,SAAQ,CAACC,IAAI,EAAE,QAA5BC,IAAI,mBAELF,QAAQ,CAACG,EAAE,+BACR,IAAIC,MAAK,CAACF,IAAI,CAACG,OAAO,EAAI,yBAAyB,CAAC,yCAGrD,IAAI,0DACZ,2CAED,eAAsBgB,WAAU,gDAkB/B,6FAlBM,kBAA0BC,YAAY,iKACpBvB,MAAK,WACvBF,eAAe,sBAAayB,YAAY,CAACV,OAAO,UACnD,CACEI,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACG,YAAY,CAACC,WAAW,CAAC,CAC9CH,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CACF,QATKpB,QAAQ,uCAUKA,SAAQ,CAACC,IAAI,EAAE,QAA5BC,IAAI,mBAELF,QAAQ,CAACG,EAAE,+BACR,IAAIC,MAAK,CAACF,IAAI,CAACG,OAAO,EAAI,wBAAwB,CAAC,yCAGpD,CAAEmB,SAAS,CAAEtB,IAAI,CAACuB,IAAK,CAAC,0DAChC,6CAED,eAAsBC,eAAc,oDAqBnC,qGArBM,kBAA8Bd,OAAO,oMACnBb,MAAK,WAAIF,eAAe,sBAAae,OAAO,UAAQ,QAArEZ,QAAQ,uCAEKA,SAAQ,CAACC,IAAI,EAAE,QAA5BC,IAAI,mBAELF,QAAQ,CAACG,EAAE,+BACR,IAAIC,MAAK,CAACF,IAAI,CAACG,OAAO,EAAI,yBAAyB,CAAC,QAGtDsB,mBAAmB,CAAG,EAAE,CAE9B,IAAWpB,GAAG,GAAIL,KAAI,CAAE,CAChB0B,UAAU,gBACdnB,EAAE,CAAEF,GAAG,EACJL,IAAI,CAACK,GAAG,CAAC,EAGdoB,mBAAmB,CAACjB,IAAI,CAACkB,UAAU,CAAC,CACtC,CAAC,iCAEMD,mBAAmB,2DAC3B"},"metadata":{},"sourceType":"module"}