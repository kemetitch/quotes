{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","hooks/use-http.js","lib/api.js","components/UI/LoadingSpinner.js","components/UI/LoadingSpinner.module.css","components/quotes/HighlightedQuote.module.css","components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","pages/QuoteDetails.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","transformedQuotes","quoteObj","id","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","requesetData","commentData","commentId","name","getAllComments","transformedComments","commentObj","LoadingSpinner","className","classes","spinner","module","exports","HighlightedQuote","props","quote","text","author","NewCommentForm","commentTextRef","useRef","onAddComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","form","onSubmit","control","htmlFor","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","useState","isAddingComment","setIsAddingComment","param","useParams","quoteid","loadedComment","addCommentHandler","onClick","QuoteDetails","to","path","element"],"mappings":"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","file":"static/js/3.b3732521.chunk.js","sourcesContent":["import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import { useReducer, useCallback } from \"react\";\r\n\r\nfunction httpReducer(state, action) {\r\n  if (action.type === \"SEND\") {\r\n    return {\r\n      data: null,\r\n      error: null,\r\n      status: \"pending\",\r\n    };\r\n  }\r\n\r\n  if (action.type === \"SUCCESS\") {\r\n    return {\r\n      data: action.responseData,\r\n      error: null,\r\n      status: \"completed\",\r\n    };\r\n  }\r\n\r\n  if (action.type === \"ERROR\") {\r\n    return {\r\n      data: null,\r\n      error: action.errorMessage,\r\n      status: \"completed\",\r\n    };\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nfunction useHttp(requestFunction, startWithPending = false) {\r\n  const [httpState, dispatch] = useReducer(httpReducer, {\r\n    status: startWithPending ? \"pending\" : null,\r\n    data: null,\r\n    error: null,\r\n  });\r\n\r\n  const sendRequest = useCallback(\r\n    async function (requestData) {\r\n      dispatch({ type: \"SEND\" });\r\n      try {\r\n        const responseData = await requestFunction(requestData);\r\n        dispatch({ type: \"SUCCESS\", responseData });\r\n      } catch (error) {\r\n        dispatch({\r\n          type: \"ERROR\",\r\n          errorMessage: error.message || \"Something went wrong!\",\r\n        });\r\n      }\r\n    },\r\n    [requestFunction]\r\n  );\r\n\r\n  return {\r\n    sendRequest,\r\n    ...httpState,\r\n  };\r\n}\r\n\r\nexport default useHttp;\r\n","const FIREBASE_DOMAIN = \"https://quotes-216e6-default-rtdb.firebaseio.com\";\r\n\r\nexport async function getAllQuotes() {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not fetch quotes.\");\r\n  }\r\n\r\n  const transformedQuotes = [];\r\n\r\n  for (const key in data) {\r\n    const quoteObj = {\r\n      id: key,\r\n      ...data[key],\r\n    };\r\n\r\n    transformedQuotes.push(quoteObj);\r\n  }\r\n\r\n  return transformedQuotes;\r\n}\r\n\r\nexport async function getSingleQuote(quoteId) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not fetch quote.\");\r\n  }\r\n\r\n  const loadedQuote = {\r\n    id: quoteId,\r\n    ...data,\r\n  };\r\n\r\n  return loadedQuote;\r\n}\r\n\r\nexport async function addQuote(quoteData) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\r\n    method: \"POST\",\r\n    body: JSON.stringify(quoteData),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not create quote.\");\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport async function addComment(requesetData) {\r\n  const response = await fetch(\r\n    `${FIREBASE_DOMAIN}/comments/${requesetData.quoteId}.json`,\r\n    {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requesetData.commentData),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }\r\n  );\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not add comment.\");\r\n  }\r\n\r\n  return { commentId: data.name };\r\n}\r\n\r\nexport async function getAllComments(quoteId) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\r\n\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not get comments.\");\r\n  }\r\n\r\n  const transformedComments = [];\r\n\r\n  for (const key in data) {\r\n    const commentObj = {\r\n      id: key,\r\n      ...data[key],\r\n    };\r\n\r\n    transformedComments.push(commentObj);\r\n  }\r\n\r\n  return transformedComments;\r\n}\r\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__scOrC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__1URlM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__2sf_E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2E8Q6\",\"loading\":\"NewCommentForm_loading__1QiYn\",\"control\":\"NewCommentForm_control__11dZW\",\"actions\":\"NewCommentForm_actions__1ifKS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__sWVb9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__2OHz1\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useRef, useEffect } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport classes from \"./NewCommentForm.module.css\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status } = useHttp(addComment);\n\n  const { onAddComment } = props;\n\n  useEffect(() => {\n    if (status === \"completed\") {\n      onAddComment();\n    }\n  }, [status, onAddComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const param = useParams();\n  const { quoteid } = param;\n  const { sendRequest, status, data: loadedComment } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteid);\n  }, [quoteid, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addCommentHandler = useCallback(() => {\n    sendRequest(quoteid);\n  }, [sendRequest, quoteid]);\n\n  let comment;\n  if (status === \"pending\") {\n    comment = <LoadingSpinner />;\n  }\n  if (status === \"completed\" && loadedComment) {\n    comment = <CommentsList comments={loadedComment} />;\n  }\n  if (\n    status === \"completed\" &&\n    (!loadedComment || loadedComment.length === 0)\n  ) {\n    comment = <p className=\"centered\">no comments added yet</p>;\n  }\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={param.quoteid}\n          onAddComment={addCommentHandler}\n        />\n      )}\n      {comment}\n    </section>\n  );\n};\n\nexport default Comments;\n","import React, { useEffect } from \"react\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\nimport { Route, useParams, Routes, Link } from \"react-router-dom\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\n\r\nconst QuoteDetails = () => {\r\n  const param = useParams();\r\n  const { quoteid } = param;\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuote,\r\n    error,\r\n  } = useHttp(getSingleQuote, true);\r\n  useEffect(() => {\r\n    sendRequest(quoteid);\r\n  }, [sendRequest, quoteid]);\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n  if (!loadedQuote.text) {\r\n    <p>no Quote found</p>;\r\n  }\r\n  return (\r\n    <div>\r\n      <HighlightedQuote\r\n        text={loadedQuote.text}\r\n        author={loadedQuote.author}\r\n      ></HighlightedQuote>\r\n      <div className=\"centered\">\r\n        <Link className=\"btn--flat\" to={`/allquotes/${param.quoteid}/comment`}>\r\n          Add Comment\r\n        </Link>\r\n      </div>\r\n      <Routes>\r\n        <Route path=\"/comment\" element={<Comments />}></Route>\r\n      </Routes>\r\n    </div>\r\n  );\r\n};\r\nexport default QuoteDetails;\r\n"],"sourceRoot":""}